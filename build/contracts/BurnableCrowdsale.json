{
  "contractName": "BurnableCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isFinalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "escrow",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Finalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.4.24;\n\nimport './TicketToken_01.sol';\nimport 'openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol';\n\n\n/**\n * @title Burnable Crowdsale Contract\n *\n * @dev Implementation of a Burnable Crowdsale\n * this contract is meant to be implemented on top of a Refundable Crowdsale\n * in order to burn Tokens when the user send the tokens back to the contract\n *\n * The Tokens will be burned when the user execute \"claimRenund\" funtion (located in Refundable Crowdsale contract).\n *\n * This contract for some reason is not available in OpenZeppelin library.\n * so I've made one and will be happy to replace it when they have one.\n */\ncontract BurnableCrowdsale is RefundableCrowdsale {\n\n  /**\n   * @dev This contract needs to get the address of the token in order to access/utilize\n   * it's functions\n   */\n    TicketToken_01 token;\n\n    constructor\n        (\n            TicketToken_01 _token\n        )\n        public\n        {\n         token = _token;\n        }\n\n    /**\n     * @dev This function will execute the claimRefund in\n     * it's functions\n     */\n    function claimRefund() public {\n        super.claimRefund();\n        token.burnByCrowdsale(token.balanceOf(msg.sender), msg.sender);\n    }\n}\n",
  "sourcePath": "/Users/ahmedalmutawa/ethereum/ConsensysAcademy/EventCrowd3/contracts/BurnableCrowdsale.sol",
  "ast": {
    "absolutePath": "/Users/ahmedalmutawa/ethereum/ConsensysAcademy/EventCrowd3/contracts/BurnableCrowdsale.sol",
    "exportedSymbols": {
      "BurnableCrowdsale": [
        39
      ]
    },
    "id": 40,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/ahmedalmutawa/ethereum/ConsensysAcademy/EventCrowd3/contracts/TicketToken_01.sol",
        "file": "./TicketToken_01.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 40,
        "sourceUnit": 358,
        "src": "26:30:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 40,
        "sourceUnit": 748,
        "src": "57:88:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 747,
              "src": "699:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$747",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "699:19:0"
          }
        ],
        "contractDependencies": [
          585,
          633,
          747,
          861,
          1041
        ],
        "contractKind": "contract",
        "documentation": "@title Burnable Crowdsale Contract\n * @dev Implementation of a Burnable Crowdsale\nthis contract is meant to be implemented on top of a Refundable Crowdsale\nin order to burn Tokens when the user send the tokens back to the contract\n * The Tokens will be burned when the user execute \"claimRenund\" funtion (located in Refundable Crowdsale contract).\n * This contract for some reason is not available in OpenZeppelin library.\nso I've made one and will be happy to replace it when they have one.",
        "fullyImplemented": false,
        "id": 39,
        "linearizedBaseContracts": [
          39,
          747,
          633,
          861,
          585,
          1041
        ],
        "name": "BurnableCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 39,
            "src": "847:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TicketToken_01_$357",
              "typeString": "contract TicketToken_01"
            },
            "typeName": {
              "contractScope": null,
              "id": 6,
              "name": "TicketToken_01",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 357,
              "src": "847:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TicketToken_01_$357",
                "typeString": "contract TicketToken_01"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16,
              "nodeType": "Block",
              "src": "963:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "974:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TicketToken_01_$357",
                        "typeString": "contract TicketToken_01"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "982:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TicketToken_01_$357",
                        "typeString": "contract TicketToken_01"
                      }
                    },
                    "src": "974:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TicketToken_01_$357",
                      "typeString": "contract TicketToken_01"
                    }
                  },
                  "id": 15,
                  "nodeType": "ExpressionStatement",
                  "src": "974:14:0"
                }
              ]
            },
            "documentation": null,
            "id": 17,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "908:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TicketToken_01_$357",
                    "typeString": "contract TicketToken_01"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8,
                    "name": "TicketToken_01",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 357,
                    "src": "908:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TicketToken_01_$357",
                      "typeString": "contract TicketToken_01"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "894:45:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "963:0:0"
            },
            "scope": 39,
            "src": "874:125:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37,
              "nodeType": "Block",
              "src": "1131:108:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 20,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2037,
                        "src": "1141:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_BurnableCrowdsale_$39",
                          "typeString": "contract super BurnableCrowdsale"
                        }
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimRefund",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 691,
                      "src": "1141:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1141:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "1141:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 30,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1989,
                              "src": "1208:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 31,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1208:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 28,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "1192:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TicketToken_01_$357",
                              "typeString": "contract TicketToken_01"
                            }
                          },
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1412,
                          "src": "1192:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1192:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 33,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1989,
                          "src": "1221:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1221:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 25,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1170:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TicketToken_01_$357",
                          "typeString": "contract TicketToken_01"
                        }
                      },
                      "id": 27,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnByCrowdsale",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 356,
                      "src": "1170:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1170:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "1170:62:0"
                }
              ]
            },
            "documentation": "@dev This function will execute the claimRefund in\nit's functions",
            "id": 38,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "claimRefund",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1121:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1131:0:0"
            },
            "scope": 39,
            "src": "1101:138:0",
            "stateMutability": "nonpayable",
            "superFunction": 691,
            "visibility": "public"
          }
        ],
        "scope": 40,
        "src": "669:572:0"
      }
    ],
    "src": "0:1242:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/ahmedalmutawa/ethereum/ConsensysAcademy/EventCrowd3/contracts/BurnableCrowdsale.sol",
    "exportedSymbols": {
      "BurnableCrowdsale": [
        39
      ]
    },
    "id": 40,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/ahmedalmutawa/ethereum/ConsensysAcademy/EventCrowd3/contracts/TicketToken_01.sol",
        "file": "./TicketToken_01.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 40,
        "sourceUnit": 358,
        "src": "26:30:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 40,
        "sourceUnit": 748,
        "src": "57:88:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 747,
              "src": "699:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$747",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "699:19:0"
          }
        ],
        "contractDependencies": [
          585,
          633,
          747,
          861,
          1041
        ],
        "contractKind": "contract",
        "documentation": "@title Burnable Crowdsale Contract\n * @dev Implementation of a Burnable Crowdsale\nthis contract is meant to be implemented on top of a Refundable Crowdsale\nin order to burn Tokens when the user send the tokens back to the contract\n * The Tokens will be burned when the user execute \"claimRenund\" funtion (located in Refundable Crowdsale contract).\n * This contract for some reason is not available in OpenZeppelin library.\nso I've made one and will be happy to replace it when they have one.",
        "fullyImplemented": false,
        "id": 39,
        "linearizedBaseContracts": [
          39,
          747,
          633,
          861,
          585,
          1041
        ],
        "name": "BurnableCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 39,
            "src": "847:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TicketToken_01_$357",
              "typeString": "contract TicketToken_01"
            },
            "typeName": {
              "contractScope": null,
              "id": 6,
              "name": "TicketToken_01",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 357,
              "src": "847:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TicketToken_01_$357",
                "typeString": "contract TicketToken_01"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16,
              "nodeType": "Block",
              "src": "963:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "974:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TicketToken_01_$357",
                        "typeString": "contract TicketToken_01"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "982:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TicketToken_01_$357",
                        "typeString": "contract TicketToken_01"
                      }
                    },
                    "src": "974:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TicketToken_01_$357",
                      "typeString": "contract TicketToken_01"
                    }
                  },
                  "id": 15,
                  "nodeType": "ExpressionStatement",
                  "src": "974:14:0"
                }
              ]
            },
            "documentation": null,
            "id": 17,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "908:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TicketToken_01_$357",
                    "typeString": "contract TicketToken_01"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8,
                    "name": "TicketToken_01",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 357,
                    "src": "908:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TicketToken_01_$357",
                      "typeString": "contract TicketToken_01"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "894:45:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "963:0:0"
            },
            "scope": 39,
            "src": "874:125:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37,
              "nodeType": "Block",
              "src": "1131:108:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 20,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2037,
                        "src": "1141:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_BurnableCrowdsale_$39",
                          "typeString": "contract super BurnableCrowdsale"
                        }
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimRefund",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 691,
                      "src": "1141:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1141:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "1141:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 30,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1989,
                              "src": "1208:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 31,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1208:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 28,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "1192:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TicketToken_01_$357",
                              "typeString": "contract TicketToken_01"
                            }
                          },
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1412,
                          "src": "1192:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1192:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 33,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1989,
                          "src": "1221:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1221:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 25,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1170:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TicketToken_01_$357",
                          "typeString": "contract TicketToken_01"
                        }
                      },
                      "id": 27,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnByCrowdsale",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 356,
                      "src": "1170:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1170:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "1170:62:0"
                }
              ]
            },
            "documentation": "@dev This function will execute the claimRefund in\nit's functions",
            "id": 38,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "claimRefund",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1121:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1131:0:0"
            },
            "scope": 39,
            "src": "1101:138:0",
            "stateMutability": "nonpayable",
            "superFunction": 691,
            "visibility": "public"
          }
        ],
        "scope": 40,
        "src": "669:572:0"
      }
    ],
    "src": "0:1242:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-08-25T10:35:32.520Z"
}