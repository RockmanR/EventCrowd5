{
  "contractName": "EventCrowd_01",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isFinalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "escrow",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner_",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Finalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "timeToStartContract",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "timeToCloseContract",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEscrowAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStartStatus",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCloseStatus",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "circuitBreaker",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "startTime_",
          "type": "uint256"
        },
        {
          "name": "closingTime_",
          "type": "uint256"
        }
      ],
      "name": "setTime",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405260043610610149576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063122fd48a146101545780631515bc2b146101ab57806316efd941146101da5780632c4e722e146101f1578063401938831461021c5780634042b66f146102475780634b6753bc146102725780634bb278f31461029d578063521eb273146102b45780635c56303d1461030b578063715018a614610336578063796843731461034d5780637d3d65221461037c5780638d4e4083146103ab5780638da5cb5b146103da578063a0355eca14610431578063b5545a3c14610468578063b7a8807c1461047f578063e2fdcc17146104aa578063e3dad52514610501578063e76630791461052c578063eae3027414610583578063ec8ac4d8146105b2578063f2fde38b146105e8578063fc0c546a1461062b575b61015233610682565b005b34801561016057600080fd5b50610169610750565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101b757600080fd5b506101c061077a565b604051808215151515815260200191505060405180910390f35b3480156101e657600080fd5b506101ef610787565b005b3480156101fd57600080fd5b506102066108b3565b6040518082815260200191505060405180910390f35b34801561022857600080fd5b506102316108b9565b6040518082815260200191505060405180910390f35b34801561025357600080fd5b5061025c6108bf565b6040518082815260200191505060405180910390f35b34801561027e57600080fd5b506102876108c5565b6040518082815260200191505060405180910390f35b3480156102a957600080fd5b506102b26108cb565b005b3480156102c057600080fd5b506102c96109a6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561031757600080fd5b506103206109cc565b6040518082815260200191505060405180910390f35b34801561034257600080fd5b5061034b6109f1565b005b34801561035957600080fd5b50610362610af3565b604051808215151515815260200191505060405180910390f35b34801561038857600080fd5b50610391610b1b565b604051808215151515815260200191505060405180910390f35b3480156103b757600080fd5b506103c0610b2a565b604051808215151515815260200191505060405180910390f35b3480156103e657600080fd5b506103ef610b3d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561043d57600080fd5b506104666004803603810190808035906020019092919080359060200190929190505050610b62565b005b34801561047457600080fd5b5061047d610b78565b005b34801561048b57600080fd5b50610494610d56565b6040518082815260200191505060405180910390f35b3480156104b657600080fd5b506104bf610d5c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561050d57600080fd5b50610516610d82565b6040518082815260200191505060405180910390f35b34801561053857600080fd5b50610541610da7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561058f57600080fd5b50610598610dcd565b604051808215151515815260200191505060405180910390f35b6105e6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610682565b005b3480156105f457600080fd5b50610629600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610df5565b005b34801561063757600080fd5b50610640610e5c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000803491506106928383610e82565b61069b82610eaf565b90506106b282600454610ecd90919063ffffffff16565b6004819055506106c28382610ee9565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a36107398383610ef7565b610741610efb565b61074b8383610fd3565b505050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600654421015905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107e257600080fd5b42600581905550426006819055506001600760006101000a81548160ff0219169083151502179055506000600481905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561089957600080fd5b505af11580156108ad573d6000803e3d6000fd5b50505050565b60035481565b60085481565b60045481565b60065481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561092657600080fd5b600760009054906101000a900460ff1615151561094257600080fd5b61094a61077a565b151561095557600080fd5b61095d610fd7565b7f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768160405160405180910390a16001600760006101000a81548160ff021916908315150217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000804260065411156109e557426006540390506109ea565b600090505b8091505090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a4c57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000806000610b00610d82565b1415610b0f5760019050610b14565b600090505b8091505090565b60006008546004541015905090565b600760009054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8142016005819055508042016006819055505050565b610b806111ce565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636192b292600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610c7b57600080fd5b505af1158015610c8f573d6000803e3d6000fd5b505050506040513d6020811015610ca557600080fd5b8101908080519060200190929190505050336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015610d3c57600080fd5b505af1158015610d50573d6000803e3d6000fd5b50505050565b60055481565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080426005541115610d9b5742600554039050610da0565b600090505b8091505090565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000610dda6109cc565b1415610de95760019050610dee565b600090505b8091505090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e5057600080fd5b610e59816112d4565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005544210158015610e9657506006544211155b1515610ea157600080fd5b610eab82826113ce565b5050565b6000610ec66003548361141e90919063ffffffff16565b9050919050565b60008183019050828110151515610ee057fe5b80905092915050565b610ef38282611456565b5050565b5050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b158015610fb857600080fd5b505af1158015610fcc573d6000803e3d6000fd5b5050505050565b5050565b610fdf610b1b565b1561112557600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561106a57600080fd5b505af115801561107e573d6000803e3d6000fd5b50505050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561110857600080fd5b505af115801561111c573d6000803e3d6000fd5b505050506111c4565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156111ab57600080fd5b505af11580156111bf573d6000803e3d6000fd5b505050505b6111cc611565565b565b600760009054906101000a900460ff1615156111e957600080fd5b6111f1610b1b565b1515156111fd57600080fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156112ba57600080fd5b505af11580156112ce573d6000803e3d6000fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561131057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561140a57600080fd5b6000811415151561141a57600080fd5b5050565b6000808314156114315760009050611450565b818302905081838281151561144257fe5b0414151561144c57fe5b8090505b92915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561151b57600080fd5b505af115801561152f573d6000803e3d6000fd5b505050506040513d602081101561154557600080fd5b8101908080519060200190929190505050151561156157600080fd5b5050565b5600a165627a7a723058201bfcb637213981cf6afcbfbf9fa260704cf06efb7a8ca8d998bacef6850c0e900029",
  "sourceMap": "1350:4848:1:-;;;384:5:5;358:31;;;;;;;;;;;;;;;;;;;;1462:10:1;1444:28;;;;;;;;;;;;;;;;;;;;1519:9;1507;1501:3;:15;:27;1478:50;;1584:9;1572;1557:12;;:24;:36;1534:59;;1615:3;1599:19;;1636:7;1624:19;;2105:291;8:9:-1;5:2;;;30:1;27;20:12;5:2;2105:291:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2339:6;2307:4;;2251:12;;2265;;2204:5;;2211:7;;;;;;;;;;;2220:6;575:10:10;567:5;;:18;;;;;;;;;;;;;;;;;;2022:1:4;2014:5;:9;2006:18;;;;;;;;2057:1;2038:21;;:7;:21;;;;2030:30;;;;;;;;2092:1;2074:20;;:6;:20;;;;2066:29;;;;;;;;2109:5;2102:4;:12;;;;2129:7;2120:6;;:16;;;;;;;;;;;;;;;;;;2150:6;2142:5;;:14;;;;;;;;;;;;;;;;;;1935:226;;;886:15:8;870:12;:31;;862:40;;;;;;;;932:12;916;:28;;908:37;;;;;;;;966:12;952:11;:26;;;;998:12;984:11;:26;;;;735:280;;784:1:6;776:5;:9;768:18;;;;;;;;818:6;;;;;;;;;;;801:24;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;801:24:6;792:6;;:33;;;;;;;;;;;;;;;;;;838:5;831:4;:12;;;;728:120;982:6:0;974:5;;:14;;;;;;;;;;;;;;;;;;874:125;2375:10:1;2366:6;;:19;;;;;;;;;;;;;;;;;;2105:291;1350:4848;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1350:4848:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2391:21:4;2401:10;2391:9;:21::i;:::-;1350:4848:1;3479:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3479:101:1;;;;;;;;;;;;;;;;;;;;;;;;;;;1169:246:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1169:246:8;;;;;;;;;;;;;;;;;;;;;;;;;;;5216:225:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5216:225:1;;;;;;1304:19:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1304:19:4;;;;;;;;;;;;;;;;;;;;;;;452::6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;452:19:6;;;;;;;;;;;;;;;;;;;;;;;1354:24:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1354:24:4;;;;;;;;;;;;;;;;;;;;;;;292:26:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;292:26:8;;;;;;;;;;;;;;;;;;;;;;;560:163:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;560:163:5;;;;;;1002:21:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1002:21:4;;;;;;;;;;;;;;;;;;;;;;;;;;;2986:281:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2986:281:1;;;;;;;;;;;;;;;;;;;;;;;1001:111:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:10;;;;;;3775:252:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3775:252:1;;;;;;;;;;;;;;;;;;;;;;;;;;;1173:85:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1173:85:6;;;;;;;;;;;;;;;;;;;;;;;;;;;358:31:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;358:31:5;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:10;;;;;;;;;;;;;;;;;;;;;;;;;;;6026:169:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6026:169:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1101:138:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1101:138:0;;;;;;262:26:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;262:26:8;;;;;;;;;;;;;;;;;;;;;;;541::6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;541:26:6;;;;;;;;;;;;;;;;;;;;;;;;;;;2553:277:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2553:277:1;;;;;;;;;;;;;;;;;;;;;;;1417:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1417:21:1;;;;;;;;;;;;;;;;;;;;;;;;;;;4234:252;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4234:252:1;;;;;;;;;;;;;;;;;;;;;;;;;;;2553:577:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:103:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:103:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;940:18:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;940:18:4;;;;;;;;;;;;;;;;;;;;;;;;;;;2553:577;2616:17;2747:14;2636:9;2616:29;;2651:45;2672:12;2686:9;2651:20;:45::i;:::-;2764:26;2780:9;2764:15;:26::i;:::-;2747:43;;2829:24;2843:9;2829;;:13;;:24;;;;:::i;:::-;2817:9;:36;;;;2860:38;2877:12;2891:6;2860:16;:38::i;:::-;2948:12;2909:88;;2930:10;2909:88;;;2968:9;2985:6;2909:88;;;;;;;;;;;;;;;;;;;;;;;;3004:47;3027:12;3041:9;3004:22;:47::i;:::-;3058:15;:13;:15::i;:::-;3079:46;3101:12;3115:9;3079:21;:46::i;:::-;2553:577;;;:::o;3479:101:1:-;3528:7;3559:6;;;;;;;;;;;3552:13;;3479:101;:::o;1169:246:8:-;1211:4;1307:11;;1288:15;:30;;1281:37;;1169:246;:::o;5216:225:1:-;719:5:10;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;5289:3:1;5275:11;:17;;;;5322:3;5308:11;:17;;;;5355:4;5341:11;;:18;;;;;;;;;;;;;;;;;;5387:1;5375:9;:13;;;;5404:6;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5404:22:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5404:22:1;;;;5216:225::o;1304:19:4:-;;;;:::o;452::6:-;;;;:::o;1354:24:4:-;;;;:::o;292:26:8:-;;;;:::o;560:163:5:-;719:5:10;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;612:11:5;;;;;;;;;;;611:12;603:21;;;;;;;;638:11;:9;:11::i;:::-;630:20;;;;;;;;657:14;:12;:14::i;:::-;682:11;;;;;;;;;;714:4;700:11;;:18;;;;;;;;;;;;;;;;;;560:163::o;1002:21:4:-;;;;;;;;;;;;;:::o;2986:281:1:-;3038:4;3059:12;3105:3;3091:11;;:17;3087:136;;;3151:3;3137:11;;:17;3127:27;;3087:136;;;3205:1;3195:11;;3087:136;3245:7;3238:14;;2986:281;;:::o;1001:111:10:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1077:5;;;;;;;;;;;1058:25;;;;;;;;;;;;1105:1;1089:5;;:18;;;;;;;;;;;;;;;;;;1001:111::o;3775:252:1:-;3822:4;3843:6;3894:1;3869:21;:19;:21::i;:::-;:26;3865:124;;;3918:4;3914:8;;3865:124;;;3967:5;3963:9;;3865:124;4011:1;4004:8;;3775:252;;:::o;1173:85:6:-;1217:4;1249;;1236:9;;:17;;1229:24;;1173:85;:::o;358:31:5:-;;;;;;;;;;;;;:::o;238:20:10:-;;;;;;;;;;;;;:::o;6026:169:1:-;6122:10;6116:3;:16;6102:11;:30;;;;6168:12;6162:3;:18;6148:11;:32;;;;6026:169;;:::o;1101:138:0:-;1141:19;:17;:19::i;:::-;1170:5;;;;;;;;;;;:21;;;1192:5;;;;;;;;;;;:15;;;1208:10;1192:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1192:27:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1192:27:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1192:27:0;;;;;;;;;;;;;;;;1221:10;1170:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1170:62:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1170:62:0;;;;1101:138::o;262:26:8:-;;;;:::o;541::6:-;;;;;;;;;;;;;:::o;2553:277:1:-;2605:4;2626:11;2671:3;2657:11;;:17;2653:134;;;2716:3;2702:11;;:17;2693:26;;2653:134;;;2769:1;2760:10;;2653:134;2809:6;2802:13;;2553:277;;:::o;1417:21::-;;;;;;;;;;;;;:::o;4234:252::-;4281:4;4302:6;4353:1;4328:21;:19;:21::i;:::-;:26;4324:124;;;4377:4;4373:8;;4324:124;;;4426:5;4422:9;;4324:124;4470:1;4463:8;;4234:252;;:::o;1274:103:10:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;940:18:4:-;;;;;;;;;;;;;:::o;1597:180:8:-;499:11;;480:15;:30;;:64;;;;;533:11;;514:15;:30;;480:64;472:73;;;;;;;;1720:52;1747:12;1761:10;1720:26;:52::i;:::-;1597:180;;:::o;5796:121:4:-;5868:7;5892:20;5907:4;;5892:10;:14;;:20;;;;:::i;:::-;5885:27;;5796:121;;;:::o;1238:128:9:-;1298:9;1324:2;1319;:7;1315:11;;1344:2;1339:1;:7;;1332:15;;;;;;1360:1;1353:8;;1238:128;;;;:::o;5024:150:4:-;5127:42;5142:12;5156;5127:14;:42::i;:::-;5024:150;;:::o;5427:131::-;;;:::o;1630:88:6:-;1670:6;;;;;;;;;;;:14;;;1691:9;1702:10;1670:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1670:43:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1670:43:6;;;;;1630:88::o;4232:130:4:-;;;:::o;1345:197:6:-;1388:13;:11;:13::i;:::-;1384:127;;;1411:6;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1411:14:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1411:14:6;;;;1433:6;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1433:28:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1433:28:6;;;;1384:127;;;1482:6;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1482:22:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1482:22:6;;;;1384:127;1517:20;:18;:20::i;:::-;1345:197::o;936:124::-;980:11;;;;;;;;;;;972:20;;;;;;;;1007:13;:11;:13::i;:::-;1006:14;998:23;;;;;;;;1028:6;;;;;;;;;;;:15;;;1044:10;1028:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1028:27:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1028:27:6;;;;936:124::o;1512:171:10:-;1603:1;1582:23;;:9;:23;;;;1574:32;;;;;;;;1645:9;1617:38;;1638:5;;;;;;;;;;;1617:38;;;;;;;;;;;;1669:9;1661:5;;:17;;;;;;;;;;;;;;;;;;1512:171;:::o;3779:175:4:-;3916:1;3892:26;;:12;:26;;;;3884:35;;;;;;;;3947:1;3933:10;:15;;3925:24;;;;;;;;3779:175;;:::o;203:380:9:-;263:9;495:1;489:2;:7;485:36;;;513:1;506:8;;;;485:36;536:2;531;:7;527:11;;561:2;555;551:1;:6;;;;;;;;:12;544:20;;;;;;577:1;570:8;;203:380;;;;;:::o;503:246:7:-;703:5;;;;;;;;;;;681:34;;;716:12;730;681:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;681:62:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;681:62:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;681:62:7;;;;;;;;;;;;;;;;673:71;;;;;;;;503:246;;:::o;919:38:5:-;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport 'openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol';\nimport 'openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol';\nimport './BurnableCrowdsale.sol';\nimport './TicketToken_01.sol';\n\n   /**\n   * @dev This EventCrowd_01 contract contins a collection of OpenZeppelin contracts. And they are:\n   * - Crowdsale:             this is the basic (bare minimum) for a crowdsale functionality. the add-ons are below..\n   * - Minted Crowdsale:      this add-on feature let the contract mint Tokens only when an ether payment is made by an a user.\n   * - Timed Crowdsale:       this add-on feature provide the ability to have a start and end date for a crowdsale.\n   * - Finalizable Crowdsale: this add-on let the contract to collect the funds and only send it to the Owner when the deadline is achieved and \"Finalize\" function is triggered by the Onwer.\n   * - Refundable Crowdsale:  this add-on provides refunding option when the funding goal is not reached post the deadline.\n   * - Burnable Crowdsale:    this add-on burns a user tokens when he/she requests for refunding.\n   *\n   * @dev the \"_wallet\" address should be the authorized Geth account in case you are using Geth\n   * or the HD wallet from truffle with mnemonic from Metamask (or other) for Infura deployment.\n   */\n\ncontract EventCrowd_01 is BurnableCrowdsale, MintedCrowdsale {\n    address public owner_;\n    address _wallet = msg.sender;\n    uint256 _openingTime = now + 3 minutes + 1 seconds;\n    uint256 _closingTime = _openingTime + 5 minutes + 1 seconds;\n    uint256 _rate = 100;\n    uint goal = 1 ether;\n\n    /**\n    * @dev We are getting just one external variable (TicketToken_01) for the constructor.\n    * all the rest of variables are hard coded in \"EventCrowd_01\" contract.\n    * the main reason for this, is that i've faced issues wiht Java Script's Asyncronous code when i'm requesting\n    * the block number to set the time for \"openingTime\" and \"closingTime\".\n    * So as a workaround, I've included them in solidity with \"now\" and \"seconds\".\n    */\n    constructor\n        (\n            TicketToken_01 _token\n        )\n        public\n        Crowdsale(_rate, _wallet, _token)\n        TimedCrowdsale(_openingTime, _closingTime)\n        RefundableCrowdsale(goal)\n        BurnableCrowdsale(_token)\n        {\n         owner_ = msg.sender;\n        }\n\n\n            /**\n            * @dev this function is to get the time to start the funding. it will be accessed by web3 instance\n            */\n            function timeToStartContract() public view returns (uint){\n              uint opTime;\n              if (openingTime > now){\n                opTime = openingTime - now;\n              } else {\n                opTime = 0;\n              }\n              return opTime;\n            }\n\n            /**\n            * @dev this function is to get the time to close the funding. it will be accessed by web3 instance\n            */\n            function timeToCloseContract() public view returns (uint){\n              uint clsTime;\n              if (closingTime > now){\n                clsTime = closingTime - now;\n              } else {\n                clsTime = 0;\n              }\n              return clsTime;\n            }\n\n            /**\n            * @dev this function is used to get Excrow address, then that\n            * address will be used to get it's balance. it will be accessed by web3 instance\n            */\n            function getEscrowAddress() public view returns (address){\n              return escrow;\n            }\n\n            /**\n            * @dev this function is used to show 'true' when the EventCrowd contract gets started.\n            * it will be accessed by web3 instance\n            */\n            function getStartStatus() public view returns (bool){\n              bool x;\n              if (timeToStartContract() == 0){\n                x = true;\n              } else {\n                x = false;\n              }\n              return x;\n            }\n\n            /**\n            * @dev this function is used to show 'true' when the EventCrowd gets closed (passed the deadline).\n            * it will be accessed by web3 instance\n            */\n            function getCloseStatus() public view returns (bool){\n              bool x;\n              if (timeToCloseContract() == 0){\n                x = true;\n              } else {\n                x = false;\n              }\n              return x;\n            }\n\n            /**\n            * @dev emergencyStop is a circuit breaker to terminate the contract and activate the refunding feature.\n            *\n            * It can only be executed by the owner of the EventCrowd.\n            * It won't work if the owner have already took the money out of the contract, because it will be meaningless at that time.\n            *\n            * It does three main things:\n            *  1. It force the contract to expire, so nobody can send funds to it anymore.\n            *  2. It force the contract to finalize. This is a requirement for refunding.\n            *  3. It force the excrow account status to be 'Refunding'. This is also a requirement for refunding.\n            */\n            function circuitBreaker() public onlyOwner {\n              openingTime = now;\n              closingTime = now;\n              isFinalized = true;\n              weiRaised = 0;\n              escrow.enableRefunds();\n            }\n\n\n\n//////////////////////////////////   For Testing  ///////////////////////////////////\n\n            /**\n            * @dev this function is used for TESTING PURPOSES ONLY. It must be removed for real deployment.\n            *\n            * It gives you the ability to modify the time (startTime & closingTime) in order to speed up the testing process\n            *\n            * It is also needed for truffle testing. since the timelines in truffle test is different.\n            * (unless you know a way to keep truffle wait for a set number of seconds)\n            */\n            function setTime(uint startTime_, uint closingTime_) public {\n              openingTime = now + startTime_;\n              closingTime = now + closingTime_;\n            }\n\n}\n",
  "sourcePath": "/Users/ahmedalmutawa/ethereum/ConsensysAcademy/EventCrowd3/contracts/EventCrowd_01.sol",
  "ast": {
    "absolutePath": "/Users/ahmedalmutawa/ethereum/ConsensysAcademy/EventCrowd3/contracts/EventCrowd_01.sol",
    "exportedSymbols": {
      "EventCrowd_01": [
        263
      ]
    },
    "id": 264,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 41,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 42,
        "nodeType": "ImportDirective",
        "scope": 264,
        "sourceUnit": 775,
        "src": "26:80:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 43,
        "nodeType": "ImportDirective",
        "scope": 264,
        "sourceUnit": 748,
        "src": "107:88:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ahmedalmutawa/ethereum/ConsensysAcademy/EventCrowd3/contracts/BurnableCrowdsale.sol",
        "file": "./BurnableCrowdsale.sol",
        "id": 44,
        "nodeType": "ImportDirective",
        "scope": 264,
        "sourceUnit": 40,
        "src": "196:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ahmedalmutawa/ethereum/ConsensysAcademy/EventCrowd3/contracts/TicketToken_01.sol",
        "file": "./TicketToken_01.sol",
        "id": 45,
        "nodeType": "ImportDirective",
        "scope": 264,
        "sourceUnit": 358,
        "src": "230:30:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 46,
              "name": "BurnableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 39,
              "src": "1376:17:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BurnableCrowdsale_$39",
                "typeString": "contract BurnableCrowdsale"
              }
            },
            "id": 47,
            "nodeType": "InheritanceSpecifier",
            "src": "1376:17:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 48,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 774,
              "src": "1395:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$774",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 49,
            "nodeType": "InheritanceSpecifier",
            "src": "1395:15:1"
          }
        ],
        "contractDependencies": [
          39,
          585,
          633,
          747,
          774,
          861,
          1041
        ],
        "contractKind": "contract",
        "documentation": "@dev This EventCrowd_01 contract contins a collection of OpenZeppelin contracts. And they are:\n- Crowdsale:             this is the basic (bare minimum) for a crowdsale functionality. the add-ons are below..\n- Minted Crowdsale:      this add-on feature let the contract mint Tokens only when an ether payment is made by an a user.\n- Timed Crowdsale:       this add-on feature provide the ability to have a start and end date for a crowdsale.\n- Finalizable Crowdsale: this add-on let the contract to collect the funds and only send it to the Owner when the deadline is achieved and \"Finalize\" function is triggered by the Onwer.\n- Refundable Crowdsale:  this add-on provides refunding option when the funding goal is not reached post the deadline.\n- Burnable Crowdsale:    this add-on burns a user tokens when he/she requests for refunding.\n   * @dev the \"_wallet\" address should be the authorized Geth account in case you are using Geth\nor the HD wallet from truffle with mnemonic from Metamask (or other) for Infura deployment.",
        "fullyImplemented": true,
        "id": 263,
        "linearizedBaseContracts": [
          263,
          774,
          39,
          747,
          633,
          861,
          585,
          1041
        ],
        "name": "EventCrowd_01",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 51,
            "name": "owner_",
            "nodeType": "VariableDeclaration",
            "scope": 263,
            "src": "1417:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 50,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1417:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 55,
            "name": "_wallet",
            "nodeType": "VariableDeclaration",
            "scope": 263,
            "src": "1444:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 52,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1444:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "expression": {
                "argumentTypes": null,
                "id": 53,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1989,
                "src": "1462:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 54,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "referencedDeclaration": null,
              "src": "1462:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 62,
            "name": "_openingTime",
            "nodeType": "VariableDeclaration",
            "scope": 263,
            "src": "1478:50:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 56,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1478:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 61,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "id": 59,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "id": 57,
                  "name": "now",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1991,
                  "src": "1501:3:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "BinaryOperation",
                "operator": "+",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "33",
                  "id": 58,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1507:9:1",
                  "subdenomination": "minutes",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_180_by_1",
                    "typeString": "int_const 180"
                  },
                  "value": "3"
                },
                "src": "1501:15:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "+",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "31",
                "id": 60,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1519:9:1",
                "subdenomination": "seconds",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "src": "1501:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 69,
            "name": "_closingTime",
            "nodeType": "VariableDeclaration",
            "scope": 263,
            "src": "1534:59:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 63,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1534:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 68,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "id": 66,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "id": 64,
                  "name": "_openingTime",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 62,
                  "src": "1557:12:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "BinaryOperation",
                "operator": "+",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "35",
                  "id": 65,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1572:9:1",
                  "subdenomination": "minutes",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_300_by_1",
                    "typeString": "int_const 300"
                  },
                  "value": "5"
                },
                "src": "1557:24:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "+",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "31",
                "id": 67,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1584:9:1",
                "subdenomination": "seconds",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "src": "1557:36:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 72,
            "name": "_rate",
            "nodeType": "VariableDeclaration",
            "scope": 263,
            "src": "1599:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 70,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1599:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313030",
              "id": 71,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1615:3:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 75,
            "name": "goal",
            "nodeType": "VariableDeclaration",
            "scope": 263,
            "src": "1624:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 73,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1624:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 74,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1636:7:1",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "2355:41:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 95,
                      "name": "owner_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "2366:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 96,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1989,
                        "src": "2375:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2375:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2366:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "2366:19:1"
                }
              ]
            },
            "documentation": "@dev We are getting just one external variable (TicketToken_01) for the constructor.\nall the rest of variables are hard coded in \"EventCrowd_01\" contract.\nthe main reason for this, is that i've faced issues wiht Java Script's Asyncronous code when i'm requesting\nthe block number to set the time for \"openingTime\" and \"closingTime\".\nSo as a workaround, I've included them in solidity with \"now\" and \"seconds\".",
            "id": 101,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 80,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 72,
                    "src": "2204:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 81,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55,
                    "src": "2211:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 82,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 77,
                    "src": "2220:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TicketToken_01_$357",
                      "typeString": "contract TicketToken_01"
                    }
                  }
                ],
                "id": 83,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 79,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 585,
                  "src": "2194:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$585_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2194:33:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 85,
                    "name": "_openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62,
                    "src": "2251:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 86,
                    "name": "_closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 69,
                    "src": "2265:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 87,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 84,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 861,
                  "src": "2236:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$861_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2236:42:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 89,
                    "name": "goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75,
                    "src": "2307:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 90,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 88,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 747,
                  "src": "2287:19:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$747_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2287:25:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 92,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 77,
                    "src": "2339:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TicketToken_01_$357",
                      "typeString": "contract TicketToken_01"
                    }
                  }
                ],
                "id": 93,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 91,
                  "name": "BurnableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 39,
                  "src": "2321:17:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BurnableCrowdsale_$39_$",
                    "typeString": "type(contract BurnableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2321:25:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "2139:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TicketToken_01_$357",
                    "typeString": "contract TicketToken_01"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 76,
                    "name": "TicketToken_01",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 357,
                    "src": "2139:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TicketToken_01_$357",
                      "typeString": "contract TicketToken_01"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2125:45:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2355:0:1"
            },
            "scope": 263,
            "src": "2105:291:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "2610:220:1",
              "statements": [
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 107,
                      "name": "opTime",
                      "nodeType": "VariableDeclaration",
                      "scope": 128,
                      "src": "2626:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 106,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2626:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 108,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2626:11:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 109,
                      "name": "openingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 785,
                      "src": "2657:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 110,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "2671:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2657:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 123,
                    "nodeType": "Block",
                    "src": "2742:45:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 119,
                            "name": "opTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 107,
                            "src": "2760:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2769:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2760:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 122,
                        "nodeType": "ExpressionStatement",
                        "src": "2760:10:1"
                      }
                    ]
                  },
                  "id": 124,
                  "nodeType": "IfStatement",
                  "src": "2653:134:1",
                  "trueBody": {
                    "id": 118,
                    "nodeType": "Block",
                    "src": "2675:61:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 112,
                            "name": "opTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 107,
                            "src": "2693:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 113,
                              "name": "openingTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "2702:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 114,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1991,
                              "src": "2716:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2702:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2693:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 117,
                        "nodeType": "ExpressionStatement",
                        "src": "2693:26:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 125,
                    "name": "opTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 107,
                    "src": "2809:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 105,
                  "id": 126,
                  "nodeType": "Return",
                  "src": "2802:13:1"
                }
              ]
            },
            "documentation": "@dev this function is to get the time to start the funding. it will be accessed by web3 instance",
            "id": 128,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "timeToStartContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2581:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "2605:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2605:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2604:6:1"
            },
            "scope": 263,
            "src": "2553:277:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "3043:224:1",
              "statements": [
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 134,
                      "name": "clsTime",
                      "nodeType": "VariableDeclaration",
                      "scope": 155,
                      "src": "3059:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 133,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3059:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 135,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3059:12:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 136,
                      "name": "closingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 787,
                      "src": "3091:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 137,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "3105:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3091:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 150,
                    "nodeType": "Block",
                    "src": "3177:46:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 146,
                            "name": "clsTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "3195:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3205:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3195:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 149,
                        "nodeType": "ExpressionStatement",
                        "src": "3195:11:1"
                      }
                    ]
                  },
                  "id": 151,
                  "nodeType": "IfStatement",
                  "src": "3087:136:1",
                  "trueBody": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "3109:62:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 139,
                            "name": "clsTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "3127:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 140,
                              "name": "closingTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 787,
                              "src": "3137:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 141,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1991,
                              "src": "3151:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3137:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3127:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 144,
                        "nodeType": "ExpressionStatement",
                        "src": "3127:27:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 152,
                    "name": "clsTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 134,
                    "src": "3245:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 132,
                  "id": 153,
                  "nodeType": "Return",
                  "src": "3238:14:1"
                }
              ]
            },
            "documentation": "@dev this function is to get the time to close the funding. it will be accessed by web3 instance",
            "id": 155,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "timeToCloseContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3014:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3038:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3038:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3037:6:1"
            },
            "scope": 263,
            "src": "2986:281:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "3536:44:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 160,
                    "name": "escrow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 647,
                    "src": "3559:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RefundEscrow_$1317",
                      "typeString": "contract RefundEscrow"
                    }
                  },
                  "functionReturnParameters": 159,
                  "id": 161,
                  "nodeType": "Return",
                  "src": "3552:13:1"
                }
              ]
            },
            "documentation": "@dev this function is used to get Excrow address, then that\naddress will be used to get it's balance. it will be accessed by web3 instance",
            "id": 163,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getEscrowAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3504:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "3528:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3528:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3527:9:1"
            },
            "scope": 263,
            "src": "3479:101:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "3827:200:1",
              "statements": [
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 169,
                      "name": "x",
                      "nodeType": "VariableDeclaration",
                      "scope": 189,
                      "src": "3843:6:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 168,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3843:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 170,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3843:6:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 171,
                        "name": "timeToStartContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "3869:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3869:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3894:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3869:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 184,
                    "nodeType": "Block",
                    "src": "3945:44:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 180,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "3963:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3967:5:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "3963:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 183,
                        "nodeType": "ExpressionStatement",
                        "src": "3963:9:1"
                      }
                    ]
                  },
                  "id": 185,
                  "nodeType": "IfStatement",
                  "src": "3865:124:1",
                  "trueBody": {
                    "id": 179,
                    "nodeType": "Block",
                    "src": "3896:43:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 175,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "3914:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3918:4:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3914:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 178,
                        "nodeType": "ExpressionStatement",
                        "src": "3914:8:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 186,
                    "name": "x",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 169,
                    "src": "4011:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 167,
                  "id": 187,
                  "nodeType": "Return",
                  "src": "4004:8:1"
                }
              ]
            },
            "documentation": "@dev this function is used to show 'true' when the EventCrowd contract gets started.\nit will be accessed by web3 instance",
            "id": 189,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getStartStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3798:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "3822:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3822:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3821:6:1"
            },
            "scope": 263,
            "src": "3775:252:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 214,
              "nodeType": "Block",
              "src": "4286:200:1",
              "statements": [
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 195,
                      "name": "x",
                      "nodeType": "VariableDeclaration",
                      "scope": 215,
                      "src": "4302:6:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 194,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4302:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 196,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4302:6:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 197,
                        "name": "timeToCloseContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "4328:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4328:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4353:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4328:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 210,
                    "nodeType": "Block",
                    "src": "4404:44:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 206,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 195,
                            "src": "4422:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4426:5:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "4422:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 209,
                        "nodeType": "ExpressionStatement",
                        "src": "4422:9:1"
                      }
                    ]
                  },
                  "id": 211,
                  "nodeType": "IfStatement",
                  "src": "4324:124:1",
                  "trueBody": {
                    "id": 205,
                    "nodeType": "Block",
                    "src": "4355:43:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 201,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 195,
                            "src": "4373:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4377:4:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4373:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 204,
                        "nodeType": "ExpressionStatement",
                        "src": "4373:8:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 212,
                    "name": "x",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 195,
                    "src": "4470:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 193,
                  "id": 213,
                  "nodeType": "Return",
                  "src": "4463:8:1"
                }
              ]
            },
            "documentation": "@dev this function is used to show 'true' when the EventCrowd gets closed (passed the deadline).\nit will be accessed by web3 instance",
            "id": 215,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getCloseStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4257:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 215,
                  "src": "4281:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4281:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4280:6:1"
            },
            "scope": 263,
            "src": "4234:252:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "5259:182:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 220,
                      "name": "openingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 785,
                      "src": "5275:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 221,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "5289:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5275:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "5275:17:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 224,
                      "name": "closingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 787,
                      "src": "5308:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 225,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "5322:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5308:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "5308:17:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 228,
                      "name": "isFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 600,
                      "src": "5341:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5355:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5341:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "5341:18:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 232,
                      "name": "weiRaised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 376,
                      "src": "5375:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5387:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5375:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "5375:13:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 236,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "5404:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RefundEscrow_$1317",
                          "typeString": "contract RefundEscrow"
                        }
                      },
                      "id": 238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "enableRefunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1283,
                      "src": "5404:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5404:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "5404:22:1"
                }
              ]
            },
            "documentation": "@dev emergencyStop is a circuit breaker to terminate the contract and activate the refunding feature.\n            * It can only be executed by the owner of the EventCrowd.\nIt won't work if the owner have already took the money out of the contract, because it will be meaningless at that time.\n            * It does three main things:\n 1. It force the contract to expire, so nobody can send funds to it anymore.\n 2. It force the contract to finalize. This is a requirement for refunding.\n 3. It force the excrow account status to be 'Refunding'. This is also a requirement for refunding.",
            "id": 242,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 218,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 217,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 989,
                  "src": "5249:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5249:9:1"
              }
            ],
            "name": "circuitBreaker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5239:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5259:0:1"
            },
            "scope": 263,
            "src": "5216:225:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "6086:109:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 249,
                      "name": "openingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 785,
                      "src": "6102:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "6116:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 251,
                        "name": "startTime_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "6122:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6116:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6102:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 254,
                  "nodeType": "ExpressionStatement",
                  "src": "6102:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 255,
                      "name": "closingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 787,
                      "src": "6148:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 256,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "6162:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 257,
                        "name": "closingTime_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "6168:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6162:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6148:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 260,
                  "nodeType": "ExpressionStatement",
                  "src": "6148:32:1"
                }
              ]
            },
            "documentation": "@dev this function is used for TESTING PURPOSES ONLY. It must be removed for real deployment.\n            * It gives you the ability to modify the time (startTime & closingTime) in order to speed up the testing process\n            * It is also needed for truffle testing. since the timelines in truffle test is different.\n(unless you know a way to keep truffle wait for a set number of seconds)",
            "id": 262,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "name": "startTime_",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "6043:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6043:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 246,
                  "name": "closingTime_",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "6060:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6060:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6042:36:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6086:0:1"
            },
            "scope": 263,
            "src": "6026:169:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 264,
        "src": "1350:4848:1"
      }
    ],
    "src": "0:6199:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/ahmedalmutawa/ethereum/ConsensysAcademy/EventCrowd3/contracts/EventCrowd_01.sol",
    "exportedSymbols": {
      "EventCrowd_01": [
        263
      ]
    },
    "id": 264,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 41,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 42,
        "nodeType": "ImportDirective",
        "scope": 264,
        "sourceUnit": 775,
        "src": "26:80:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 43,
        "nodeType": "ImportDirective",
        "scope": 264,
        "sourceUnit": 748,
        "src": "107:88:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ahmedalmutawa/ethereum/ConsensysAcademy/EventCrowd3/contracts/BurnableCrowdsale.sol",
        "file": "./BurnableCrowdsale.sol",
        "id": 44,
        "nodeType": "ImportDirective",
        "scope": 264,
        "sourceUnit": 40,
        "src": "196:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ahmedalmutawa/ethereum/ConsensysAcademy/EventCrowd3/contracts/TicketToken_01.sol",
        "file": "./TicketToken_01.sol",
        "id": 45,
        "nodeType": "ImportDirective",
        "scope": 264,
        "sourceUnit": 358,
        "src": "230:30:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 46,
              "name": "BurnableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 39,
              "src": "1376:17:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BurnableCrowdsale_$39",
                "typeString": "contract BurnableCrowdsale"
              }
            },
            "id": 47,
            "nodeType": "InheritanceSpecifier",
            "src": "1376:17:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 48,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 774,
              "src": "1395:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$774",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 49,
            "nodeType": "InheritanceSpecifier",
            "src": "1395:15:1"
          }
        ],
        "contractDependencies": [
          39,
          585,
          633,
          747,
          774,
          861,
          1041
        ],
        "contractKind": "contract",
        "documentation": "@dev This EventCrowd_01 contract contins a collection of OpenZeppelin contracts. And they are:\n- Crowdsale:             this is the basic (bare minimum) for a crowdsale functionality. the add-ons are below..\n- Minted Crowdsale:      this add-on feature let the contract mint Tokens only when an ether payment is made by an a user.\n- Timed Crowdsale:       this add-on feature provide the ability to have a start and end date for a crowdsale.\n- Finalizable Crowdsale: this add-on let the contract to collect the funds and only send it to the Owner when the deadline is achieved and \"Finalize\" function is triggered by the Onwer.\n- Refundable Crowdsale:  this add-on provides refunding option when the funding goal is not reached post the deadline.\n- Burnable Crowdsale:    this add-on burns a user tokens when he/she requests for refunding.\n   * @dev the \"_wallet\" address should be the authorized Geth account in case you are using Geth\nor the HD wallet from truffle with mnemonic from Metamask (or other) for Infura deployment.",
        "fullyImplemented": true,
        "id": 263,
        "linearizedBaseContracts": [
          263,
          774,
          39,
          747,
          633,
          861,
          585,
          1041
        ],
        "name": "EventCrowd_01",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 51,
            "name": "owner_",
            "nodeType": "VariableDeclaration",
            "scope": 263,
            "src": "1417:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 50,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1417:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 55,
            "name": "_wallet",
            "nodeType": "VariableDeclaration",
            "scope": 263,
            "src": "1444:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 52,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1444:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "expression": {
                "argumentTypes": null,
                "id": 53,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1989,
                "src": "1462:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 54,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "referencedDeclaration": null,
              "src": "1462:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 62,
            "name": "_openingTime",
            "nodeType": "VariableDeclaration",
            "scope": 263,
            "src": "1478:50:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 56,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1478:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 61,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "id": 59,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "id": 57,
                  "name": "now",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1991,
                  "src": "1501:3:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "BinaryOperation",
                "operator": "+",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "33",
                  "id": 58,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1507:9:1",
                  "subdenomination": "minutes",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_180_by_1",
                    "typeString": "int_const 180"
                  },
                  "value": "3"
                },
                "src": "1501:15:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "+",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "31",
                "id": 60,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1519:9:1",
                "subdenomination": "seconds",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "src": "1501:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 69,
            "name": "_closingTime",
            "nodeType": "VariableDeclaration",
            "scope": 263,
            "src": "1534:59:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 63,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1534:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 68,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "id": 66,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "id": 64,
                  "name": "_openingTime",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 62,
                  "src": "1557:12:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "BinaryOperation",
                "operator": "+",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "35",
                  "id": 65,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1572:9:1",
                  "subdenomination": "minutes",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_300_by_1",
                    "typeString": "int_const 300"
                  },
                  "value": "5"
                },
                "src": "1557:24:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "+",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "31",
                "id": 67,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1584:9:1",
                "subdenomination": "seconds",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "src": "1557:36:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 72,
            "name": "_rate",
            "nodeType": "VariableDeclaration",
            "scope": 263,
            "src": "1599:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 70,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1599:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313030",
              "id": 71,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1615:3:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 75,
            "name": "goal",
            "nodeType": "VariableDeclaration",
            "scope": 263,
            "src": "1624:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 73,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1624:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 74,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1636:7:1",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "2355:41:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 95,
                      "name": "owner_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "2366:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 96,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1989,
                        "src": "2375:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2375:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2366:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "2366:19:1"
                }
              ]
            },
            "documentation": "@dev We are getting just one external variable (TicketToken_01) for the constructor.\nall the rest of variables are hard coded in \"EventCrowd_01\" contract.\nthe main reason for this, is that i've faced issues wiht Java Script's Asyncronous code when i'm requesting\nthe block number to set the time for \"openingTime\" and \"closingTime\".\nSo as a workaround, I've included them in solidity with \"now\" and \"seconds\".",
            "id": 101,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 80,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 72,
                    "src": "2204:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 81,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55,
                    "src": "2211:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 82,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 77,
                    "src": "2220:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TicketToken_01_$357",
                      "typeString": "contract TicketToken_01"
                    }
                  }
                ],
                "id": 83,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 79,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 585,
                  "src": "2194:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$585_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2194:33:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 85,
                    "name": "_openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62,
                    "src": "2251:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 86,
                    "name": "_closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 69,
                    "src": "2265:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 87,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 84,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 861,
                  "src": "2236:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$861_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2236:42:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 89,
                    "name": "goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75,
                    "src": "2307:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 90,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 88,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 747,
                  "src": "2287:19:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$747_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2287:25:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 92,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 77,
                    "src": "2339:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TicketToken_01_$357",
                      "typeString": "contract TicketToken_01"
                    }
                  }
                ],
                "id": 93,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 91,
                  "name": "BurnableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 39,
                  "src": "2321:17:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BurnableCrowdsale_$39_$",
                    "typeString": "type(contract BurnableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2321:25:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "2139:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TicketToken_01_$357",
                    "typeString": "contract TicketToken_01"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 76,
                    "name": "TicketToken_01",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 357,
                    "src": "2139:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TicketToken_01_$357",
                      "typeString": "contract TicketToken_01"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2125:45:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2355:0:1"
            },
            "scope": 263,
            "src": "2105:291:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "2610:220:1",
              "statements": [
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 107,
                      "name": "opTime",
                      "nodeType": "VariableDeclaration",
                      "scope": 128,
                      "src": "2626:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 106,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2626:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 108,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2626:11:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 109,
                      "name": "openingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 785,
                      "src": "2657:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 110,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "2671:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2657:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 123,
                    "nodeType": "Block",
                    "src": "2742:45:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 119,
                            "name": "opTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 107,
                            "src": "2760:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2769:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2760:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 122,
                        "nodeType": "ExpressionStatement",
                        "src": "2760:10:1"
                      }
                    ]
                  },
                  "id": 124,
                  "nodeType": "IfStatement",
                  "src": "2653:134:1",
                  "trueBody": {
                    "id": 118,
                    "nodeType": "Block",
                    "src": "2675:61:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 112,
                            "name": "opTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 107,
                            "src": "2693:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 113,
                              "name": "openingTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "2702:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 114,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1991,
                              "src": "2716:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2702:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2693:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 117,
                        "nodeType": "ExpressionStatement",
                        "src": "2693:26:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 125,
                    "name": "opTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 107,
                    "src": "2809:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 105,
                  "id": 126,
                  "nodeType": "Return",
                  "src": "2802:13:1"
                }
              ]
            },
            "documentation": "@dev this function is to get the time to start the funding. it will be accessed by web3 instance",
            "id": 128,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "timeToStartContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2581:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "2605:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2605:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2604:6:1"
            },
            "scope": 263,
            "src": "2553:277:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "3043:224:1",
              "statements": [
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 134,
                      "name": "clsTime",
                      "nodeType": "VariableDeclaration",
                      "scope": 155,
                      "src": "3059:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 133,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3059:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 135,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3059:12:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 136,
                      "name": "closingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 787,
                      "src": "3091:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 137,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "3105:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3091:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 150,
                    "nodeType": "Block",
                    "src": "3177:46:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 146,
                            "name": "clsTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "3195:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3205:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3195:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 149,
                        "nodeType": "ExpressionStatement",
                        "src": "3195:11:1"
                      }
                    ]
                  },
                  "id": 151,
                  "nodeType": "IfStatement",
                  "src": "3087:136:1",
                  "trueBody": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "3109:62:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 139,
                            "name": "clsTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "3127:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 140,
                              "name": "closingTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 787,
                              "src": "3137:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 141,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1991,
                              "src": "3151:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3137:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3127:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 144,
                        "nodeType": "ExpressionStatement",
                        "src": "3127:27:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 152,
                    "name": "clsTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 134,
                    "src": "3245:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 132,
                  "id": 153,
                  "nodeType": "Return",
                  "src": "3238:14:1"
                }
              ]
            },
            "documentation": "@dev this function is to get the time to close the funding. it will be accessed by web3 instance",
            "id": 155,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "timeToCloseContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3014:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3038:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3038:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3037:6:1"
            },
            "scope": 263,
            "src": "2986:281:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "3536:44:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 160,
                    "name": "escrow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 647,
                    "src": "3559:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RefundEscrow_$1317",
                      "typeString": "contract RefundEscrow"
                    }
                  },
                  "functionReturnParameters": 159,
                  "id": 161,
                  "nodeType": "Return",
                  "src": "3552:13:1"
                }
              ]
            },
            "documentation": "@dev this function is used to get Excrow address, then that\naddress will be used to get it's balance. it will be accessed by web3 instance",
            "id": 163,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getEscrowAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3504:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "3528:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3528:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3527:9:1"
            },
            "scope": 263,
            "src": "3479:101:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "3827:200:1",
              "statements": [
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 169,
                      "name": "x",
                      "nodeType": "VariableDeclaration",
                      "scope": 189,
                      "src": "3843:6:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 168,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3843:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 170,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3843:6:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 171,
                        "name": "timeToStartContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "3869:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3869:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3894:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3869:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 184,
                    "nodeType": "Block",
                    "src": "3945:44:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 180,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "3963:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3967:5:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "3963:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 183,
                        "nodeType": "ExpressionStatement",
                        "src": "3963:9:1"
                      }
                    ]
                  },
                  "id": 185,
                  "nodeType": "IfStatement",
                  "src": "3865:124:1",
                  "trueBody": {
                    "id": 179,
                    "nodeType": "Block",
                    "src": "3896:43:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 175,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "3914:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3918:4:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3914:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 178,
                        "nodeType": "ExpressionStatement",
                        "src": "3914:8:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 186,
                    "name": "x",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 169,
                    "src": "4011:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 167,
                  "id": 187,
                  "nodeType": "Return",
                  "src": "4004:8:1"
                }
              ]
            },
            "documentation": "@dev this function is used to show 'true' when the EventCrowd contract gets started.\nit will be accessed by web3 instance",
            "id": 189,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getStartStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3798:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "3822:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3822:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3821:6:1"
            },
            "scope": 263,
            "src": "3775:252:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 214,
              "nodeType": "Block",
              "src": "4286:200:1",
              "statements": [
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 195,
                      "name": "x",
                      "nodeType": "VariableDeclaration",
                      "scope": 215,
                      "src": "4302:6:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 194,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4302:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 196,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4302:6:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 197,
                        "name": "timeToCloseContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "4328:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4328:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4353:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4328:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 210,
                    "nodeType": "Block",
                    "src": "4404:44:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 206,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 195,
                            "src": "4422:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4426:5:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "4422:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 209,
                        "nodeType": "ExpressionStatement",
                        "src": "4422:9:1"
                      }
                    ]
                  },
                  "id": 211,
                  "nodeType": "IfStatement",
                  "src": "4324:124:1",
                  "trueBody": {
                    "id": 205,
                    "nodeType": "Block",
                    "src": "4355:43:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 201,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 195,
                            "src": "4373:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4377:4:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4373:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 204,
                        "nodeType": "ExpressionStatement",
                        "src": "4373:8:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 212,
                    "name": "x",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 195,
                    "src": "4470:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 193,
                  "id": 213,
                  "nodeType": "Return",
                  "src": "4463:8:1"
                }
              ]
            },
            "documentation": "@dev this function is used to show 'true' when the EventCrowd gets closed (passed the deadline).\nit will be accessed by web3 instance",
            "id": 215,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getCloseStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4257:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 215,
                  "src": "4281:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4281:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4280:6:1"
            },
            "scope": 263,
            "src": "4234:252:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "5259:182:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 220,
                      "name": "openingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 785,
                      "src": "5275:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 221,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "5289:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5275:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "5275:17:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 224,
                      "name": "closingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 787,
                      "src": "5308:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 225,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "5322:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5308:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "5308:17:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 228,
                      "name": "isFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 600,
                      "src": "5341:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5355:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5341:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "5341:18:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 232,
                      "name": "weiRaised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 376,
                      "src": "5375:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5387:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5375:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "5375:13:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 236,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "5404:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RefundEscrow_$1317",
                          "typeString": "contract RefundEscrow"
                        }
                      },
                      "id": 238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "enableRefunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1283,
                      "src": "5404:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5404:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "5404:22:1"
                }
              ]
            },
            "documentation": "@dev emergencyStop is a circuit breaker to terminate the contract and activate the refunding feature.\n            * It can only be executed by the owner of the EventCrowd.\nIt won't work if the owner have already took the money out of the contract, because it will be meaningless at that time.\n            * It does three main things:\n 1. It force the contract to expire, so nobody can send funds to it anymore.\n 2. It force the contract to finalize. This is a requirement for refunding.\n 3. It force the excrow account status to be 'Refunding'. This is also a requirement for refunding.",
            "id": 242,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 218,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 217,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 989,
                  "src": "5249:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5249:9:1"
              }
            ],
            "name": "circuitBreaker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5239:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5259:0:1"
            },
            "scope": 263,
            "src": "5216:225:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "6086:109:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 249,
                      "name": "openingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 785,
                      "src": "6102:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "6116:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 251,
                        "name": "startTime_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "6122:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6116:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6102:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 254,
                  "nodeType": "ExpressionStatement",
                  "src": "6102:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 255,
                      "name": "closingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 787,
                      "src": "6148:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 256,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "6162:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 257,
                        "name": "closingTime_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "6168:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6162:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6148:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 260,
                  "nodeType": "ExpressionStatement",
                  "src": "6148:32:1"
                }
              ]
            },
            "documentation": "@dev this function is used for TESTING PURPOSES ONLY. It must be removed for real deployment.\n            * It gives you the ability to modify the time (startTime & closingTime) in order to speed up the testing process\n            * It is also needed for truffle testing. since the timelines in truffle test is different.\n(unless you know a way to keep truffle wait for a set number of seconds)",
            "id": 262,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "name": "startTime_",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "6043:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6043:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 246,
                  "name": "closingTime_",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "6060:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6060:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6042:36:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6086:0:1"
            },
            "scope": 263,
            "src": "6026:169:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 264,
        "src": "1350:4848:1"
      }
    ],
    "src": "0:6199:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xa44d2927534d025312f457a320dbc46d47a708f4",
      "transactionHash": "0xba616aec3c33b04fd5fd332d1c91d95af2712497a3592639a6b5b2185299248b"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0xb35410612dccf6e64ac047cebf3480056ba768aa",
      "transactionHash": "0x4e06e5dc7482ab8abee1cb8cc21baa66ba8045da95618a0d1b276d9461ec22f8"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-08-25T10:37:30.751Z"
}